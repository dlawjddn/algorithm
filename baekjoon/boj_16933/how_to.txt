문제 설명:
맵이 주어지고 그 맵에 벽과 빈공간에 해당하는 정보가 주어진다.
그때 최대로 깰 수 있는 벽의 개수가 주어지고, 한번 이동할 때 마다 낮과 밤이 바뀐다.
낮일 때 벽을 깰 수 있으며 밤일 때는 불가능하다. 상하좌우 움직이는 것 뿐 아니라
제자리에 멈춰있는 것도 가능하다 멈추있을 때도 낮과 밤이 바뀌며 내가 이동한 거리에 1을 더해야한다.

주관적인 문제 느낌:
벽 부수고 이동하기 2 문제보다 제한 조건이 1개 더 늘어난 문제인데, 거의 다 구현했는데,
게시판 반례에 막혀서 고민하고 있었다. 이 문제를 해결하면서 가장 중요하게 생각했던 부분은
제자리에 언제 멈춰있는가를 고민하는게 제일 어려웠다. 모든 자리에서 멈춰있는다면 
얼마나 멈춰있는지 모르기 때문에 무한루프에 갇힐 것 같았기 때문이다.
그래서 내가 찾은 방법이 밤이고, 벽이라면 cnt+=2를 해주는 방법으로 한번에 이동거리를 2를 올려주는 방법인데, 이 코드가 1개의 반례에서 틀렸었다.
다음날까지 고민했는데 잘 모르겠어서 구글링을 했는데
벽이고, 밤일 때 플래그를 세워서 판단한 뒤 , 4방향에 대해서 모두 찾은 뒤에 플래그가 참이라면,
현재 값을 한번만 cnt 증가시켜서 인큐해주는 방법이었다. 반복문 안에서 해줘도 되지만
그렇게 하는 경우에 같은 정보를 가진 값이 최대 4번이나 들어갈 수 있기 때문에 그렇다.
다른 사람들 코드는 낮과 밤을 방문처리를 따로 해줘서 4차원 배열을 사용했는데, 애초에 나는 낮과 밤을 구별을 왜 따로해야하는지 이해가 안 갔다.
어차피 중복접근이 안된다면 굳이 해야하나 싶었다. 아니나 다를까 방법이 있었고, 이 방법이 더 직관적이고 편하다고 생각한다.
이 문제 오랜만에 어려웠고 생각하기 좋았던 문제였다. 재밌었다.

1 fail 1 compile error 1 success
